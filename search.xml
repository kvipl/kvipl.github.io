<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>完美替代多说-gitment</title>
      <link href="/2020/02/16/gitment/"/>
      <url>/2020/02/16/gitment/</url>
      
        <content type="html"><![CDATA[<blockquote><p>转自： <a href="https://yelog.org/2017/06/26/gitment/" target="_blank" rel="noopener">https://yelog.org/2017/06/26/gitment/</a></p></blockquote><p>自从多说要停止服务时，就开始关注第三方评论系统，现在的评论系统都有这样或那样的问题，见  。忽然看到作者 孙士权 的一片文章 <a href="https://imsun.net/posts/gitment-introduction/" target="_blank" rel="noopener">Gitment：使用 GitHub Issues 搭建评论系统</a> 。</p><p>立即就将 <code>gitment</code> 集成到 <code>3-hexo</code> 主题内。本篇文章只讲在 <code>3-hexo</code> 内如何使用，如果想自定义，可以参考上面原文。</p><h2 id="注册-OAuth-Application"><a href="#注册-OAuth-Application" class="headerlink" title="注册 OAuth Application"></a>注册 OAuth Application</h2><p><a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">点击此处</a> 来注册一个新的 OAuth Application。其他内容可以随意填写，但要确保填入正确的 callback URL（一般是评论页面对应的域名，如 <a href="http://yelog.org）。" target="_blank" rel="noopener">http://yelog.org）。</a><br><img src="http://img.saodiyang.com/FsumVHpCC4h5JxRNg0TiKlMf0b1Y.png" alt="作者是这样填的"></p><h2 id="使用-gitment-评论系统"><a href="#使用-gitment-评论系统" class="headerlink" title="使用 gitment 评论系统"></a>使用 gitment 评论系统</h2><p>修改主题 <code>_config.yml</code></p><pre><code class="xml">gitment:  on: true  # 启用gitment评论系统  owner: yelog  # 你的github账号  repo: yelog.github.io  # 评论issue保存的仓库，我选择保存在blog仓库，也可以新建一个仓库  client_id: d64ceca0d8a4e8b1f5c9   # 上一步注册后生成的client_id  client_secret: fb17d5f0aba31372f61a03df707bb20a39a73a06 # 上一步注册后生成的client_secret</code></pre><h2 id="部署并初始化"><a href="#部署并初始化" class="headerlink" title="部署并初始化"></a>部署并初始化</h2><p>1.发布 hexo</p><pre><code class="bash">$ hexo clear &amp;&amp; hexo g &amp;&amp; hexo d</code></pre><p>2.打开发布的blog，登录github账号，并点击 <code>Initialize Comments</code>。<br><img src="http://img.saodiyang.com/FnO9sHY-eFVXwnLplwsP9NRvityH.png" alt="初始化本页的评论"></p><p>3.现在其他人就可以进行评论了</p><h2 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h2><p>整体评论系统做的简洁，整体来说是个不错的系统。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3-hexo配置MathJax数学公式渲染</title>
      <link href="/2020/02/16/3-hexo-mathjax/"/>
      <url>/2020/02/16/3-hexo-mathjax/</url>
      
        <content type="html"><![CDATA[<blockquote><p>转自：<a href="https://yelog.org/2017/07/05/3-hexo-mathjax/" target="_blank" rel="noopener">https://yelog.org/2017/07/05/3-hexo-mathjax/</a></p></blockquote><hr>在用 markdown 写文档时，免不了碰到数学公式。<h2 id="处理hexo的MarkDown渲染器与MathJax的冲突"><a href="#处理hexo的MarkDown渲染器与MathJax的冲突" class="headerlink" title="处理hexo的MarkDown渲染器与MathJax的冲突"></a>处理hexo的MarkDown渲染器与MathJax的冲突</h2><p>由于hexo的MarkDown渲染器与MathJax有冲突，所以在使用之前需要修改两个地方。</p><p>编辑 <code>node_modules\marked\lib\marked.js</code> 脚本</p><ol><li>将451行 ，这一步取消了对 <code>\\,\{,\}</code> 的转义(escape)<pre><code class="js">escape: /^\\([\\`*{}\[\]()# +\-.!_&gt;])/,改为escape: /^\\([`*\[\]()# +\-.!_&gt;])/,</code></pre></li><li>将459行，这一步取消了对斜体标记 <code>_</code> 的转义<pre><code class="js">em: /^\b_((?:[^_]|__)+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,改为em:/^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</code></pre></li></ol><h2 id="开启MathJax"><a href="#开启MathJax" class="headerlink" title="开启MathJax"></a>开启MathJax</h2><p>修改 <code>3-hexo/_config.yml</code></p><pre><code class="xml"># MathJax 数学公式支持mathjax:  on: true #是否启用  per_page: false # 若只渲染单个页面，此选项设为false，页面内加入 mathjax: true</code></pre><p>考虑到页面的加载速度，支持渲染单个页面。</p><p>设置 <code>per_page: false</code> ,在需要渲染的页面内 加入 <code>mathjax: true</code></p><p>这样，就可以在页面内写MathJax公式了。</p><h2 id="MathJax公式书写"><a href="#MathJax公式书写" class="headerlink" title="MathJax公式书写"></a>MathJax公式书写</h2><p>公式书写依然按照MarkDown语法来，基本上也和LaTeX相同，单 <code>$</code> 符引住的是行内公式，双$符引住的是行间公式。</p><ul><li>MathJax公式书写参考<br><a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="noopener">MathJax basic tutorial and quick reference</a></li></ul><h3 id="1-MathJax行内公式"><a href="#1-MathJax行内公式" class="headerlink" title="1.MathJax行内公式"></a>1.MathJax行内公式</h3><p>含有下划线 <code>_</code> 的公式 <code>$x_mu$</code> ： $x_mu$</p><p>希腊字符 <code>$\sigma$</code> ： $\sigma$</p><p>双 <code>\\</code> 公式内换行</p><pre><code class="js">$$f(n) =\begin{cases}n/2,  &amp; \text{if $n$ is even} \\3n+1, &amp; \text{if $n$ is odd}\end{cases}$$</code></pre><p>$$<br>f(n) =<br>\begin{cases}<br>n/2,  &amp; \text{if $n$ is even} \<br>3n+1, &amp; \text{if $n$ is odd}<br>\end{cases}<br>$$</p><p>行内公式 <code>$y=ax+b$</code>：$y=ax+b$</p><p>行内公式 <code>$\cos 2\theta = \cos^2 \theta - \sin^2 \theta = 2 \cos^2 \theta$</code>：$\cos 2\theta = \cos^2 \theta - \sin^2 \theta = 2 \cos^2 \theta$</p><p>行内公式 <code>$M(\beta^{\ast}(D),D) \subseteq C$</code> ： $M(\beta^{\ast}(D),D) \subseteq C$</p><h3 id="2-MathJax行间公式"><a href="#2-MathJax行间公式" class="headerlink" title="2.MathJax行间公式"></a>2.MathJax行间公式</h3><p>行间公式<code>$$ \sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6} $$</code>：<br>$$ \sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6} $$</p><p>行间公式<code>$$ x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$</code>：<br>$$ x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$</p><h3 id="3-MathJax公式自动编号"><a href="#3-MathJax公式自动编号" class="headerlink" title="3.MathJax公式自动编号"></a>3.MathJax公式自动编号</h3><p>书写时使用</p><pre><code>$$\begin{equation}\end{equation}$$</code></pre><p>进行公式自动编号，同时会自动连续编号，例如：</p><pre><code class="xml">$$\begin{equation}\sum_{i=0}^n F_i \cdot \phi (H, p_i) - \sum_{i=1}^n a_i \cdot ( \tilde{x_i}, \tilde{y_i}) + b_i \cdot ( \tilde{x_i}^2 , \tilde{y_i}^2 )\end{equation}$$$$\begin{equation}\beta^*(D) = \mathop{argmin} \limits_{\beta} \lambda {||\beta||}^2 + \sum_{i=1}^n max(0, 1 - y_i f_{\beta}(x_i))\end{equation}$$</code></pre><p>$$<br>\begin{equation}<br>\sum_{i=0}^n F_i \cdot \phi (H, p_i) - \sum_{i=1}^n a_i \cdot ( \tilde{x_i}, \tilde{y_i}) + b_i \cdot ( \tilde{x_i}^2 , \tilde{y_i}^2 )<br>\end{equation}<br>$$<br>$$<br>\begin{equation}<br>\beta^*(D) = \mathop{argmin} \limits_{\beta} \lambda {||\beta||}^2 + \sum_{i=1}^n max(0, 1 - y_i f_{\beta}(x_i))<br>\end{equation}<br>$$</p><h2 id="MathJax公式手动编号"><a href="#MathJax公式手动编号" class="headerlink" title="MathJax公式手动编号"></a>MathJax公式手动编号</h2><p>可以在公式书写时使用 <code>\tag{手动编号}</code> 添加手动编号，例如：</p><pre><code>$$\begin{equation}\sum_{i=0}^n F_i \cdot \phi (H, p_i) - \sum_{i=1}^n a_i \cdot ( \tilde{x_i}, \tilde{y_i}) + b_i \cdot ( \tilde{x_i}^2 , \tilde{y_i}^2 ) \tag{1.2.3}\end{equation}$$</code></pre><p>$$<br>\begin{equation}<br>\sum_{i=0}^n F_i \cdot \phi (H, p_i) - \sum_{i=1}^n a_i \cdot ( \tilde{x_i}, \tilde{y_i}) + b_i \cdot ( \tilde{x_i}^2 , \tilde{y_i}^2 ) \tag{1.2.3}<br>\end{equation}<br>$$</p><p>不加 <code>\begin{equation} \end{equation}</code> 也可以，例如：</p><pre><code>$$\beta^*(D) = \mathop{argmin} \limits_{\beta} \lambda {||\beta||}^2 + \sum_{i=1}^n max(0, 1 - y_i f_{\beta}(x_i)) \tag{我的公式3}$$</code></pre><p>$$<br>\beta^*(D) = \mathop{argmin} \limits_{\beta} \lambda {||\beta||}^2 + \sum_{i=1}^n max(0, 1 - y_i f_{\beta}(x_i)) \tag{我的公式3}<br>$$</p><p>行内公式加\tag{}后会自动成为行间公式，例如： <code>$z = (p_0, ..... , p_n) \tag{公式21} $</code><br>$z = (p_0, ….. , p_n) \tag{公式21} $</p><h3 id="4-其他公式书写技巧"><a href="#4-其他公式书写技巧" class="headerlink" title="4.其他公式书写技巧"></a>4.其他公式书写技巧</h3><p><strong>如何将下标放到正下方？</strong><br>① 如果是数学符号，那么直接用 <code>\limits</code> 命令放在正下方，如Max函数下面的取值范围，需要放在Max的正下方。可以如下实现：<br><code>$ \max \limits_{a&lt;x&lt;b}\{f(x)\} $</code><br>$ \max \limits_{a&lt;x&lt;b}{f(x)} $</p><p>② 若是普通符号，那么要用 <code>\mathop</code> 先转成数学符号再用 <code>\limits</code>，如<br><code>$ \mathop{a}\limits_{i=1} $</code><br>$ \mathop{a}\limits_{i=1} $</p><p><strong>MathJax矩阵输入</strong><br>无括号矩阵：</p><pre><code>$$\begin{matrix}1 &amp; x &amp; x^2 \\1 &amp; y &amp; y^2 \\1 &amp; z &amp; z^2 \\\end{matrix}$$</code></pre><p>$$<br>\begin{matrix}<br>1 &amp; x &amp; x^2 \<br>1 &amp; y &amp; y^2 \<br>1 &amp; z &amp; z^2 \<br>\end{matrix}<br>$$</p><p>有括号有竖线矩阵：</p><pre><code>$$\left[    \begin{array}{cc|c}      1&amp;2&amp;3\\      4&amp;5&amp;6    \end{array}\right]$$</code></pre><p>$$<br>\left[<br>    \begin{array}{cc|c}<br>      1&amp;2&amp;3\<br>      4&amp;5&amp;6<br>    \end{array}<br>\right]<br>$$</p><p>行内小矩阵：<br><code>$\bigl( \begin{smallmatrix} a &amp; b \\ c &amp; d \end{smallmatrix} \bigr)$</code><br>$\bigl( \begin{smallmatrix} a &amp; b \ c &amp; d \end{smallmatrix} \bigr)$</p><p>这里有个问题，上面的写法在矩阵内没有换行，我看了下源码，双反斜杠\又被MarkDown渲染引擎转义为单个反斜杠了，解决方法是写三个反斜杠\\或在双反斜杠后换行即可：</p><p><code>$\bigl( \begin{smallmatrix} a &amp; b \\\ c &amp; d \end{smallmatrix} \bigr)$</code><br>$\bigl( \begin{smallmatrix} a &amp; b \\ c &amp; d \end{smallmatrix} \bigr)$</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://masikkk.com/article/hexo-13-MathJax/" target="_blank" rel="noopener">Hexo博客(13)添加MathJax数学公式渲染</a><br><a href="http://www.jianshu.com/p/7ab21c7f0674" target="_blank" rel="noopener">在Hexo中渲染MathJax数学公式</a><br><a href="https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="noopener">MathJax basic tutorial and quick reference</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mathjax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3-hexo配置首页</title>
      <link href="/2020/02/16/3-hexo-homepage/"/>
      <url>/2020/02/16/3-hexo-homepage/</url>
      
        <content type="html"><![CDATA[<blockquote><p>转自：<a href="https://yelog.org/2017/03/13/3-hexo-homepage/" target="_blank" rel="noopener">https://yelog.org/2017/03/13/3-hexo-homepage/</a></p></blockquote><p>今日将首页提到md文件中了，方便大家的更改。</p><p>首页文件位置 /layout/indexs.md ，既然是md格式，要怎么写大家应该都熟门熟路了，阿杰就不赘述了。</p><p>如果需要使用以下信息，可以按照下面的方式使用（<strong>以下内容不限首页使用</strong>）</p><h2 id="文章数统计-字数统计"><a href="#文章数统计-字数统计" class="headerlink" title="文章数统计/字数统计"></a>文章数统计/字数统计</h2><p>加入含有 <code>class=&quot;article_number&quot;</code>的html标签可显示文章数量。<br>加入含有 <code>class=&quot;site_word_count&quot;</code>的html标签可显示站点总字数。</p><pre><code class="html">&lt;!-- 我这里是借用了code的样式，所以直接使用code标签。    自定义样式，可加入style属性设置--&gt;&lt;code class=&quot;article_number&quot;&gt;&lt;/code&gt;&lt;code class=&quot;site_word_count&quot;&gt;&lt;/code&gt;</code></pre><p><strong>上面代码的效果：</strong><br>文章：<code class="article_number"></code>篇；总字数：<code class="site_word_count"></code>字；</p><h2 id="流量统计"><a href="#流量统计" class="headerlink" title="流量统计"></a>流量统计</h2><blockquote><p>日志： 2017-03-18改动，由原来的 id 改为现在的 class，可在页面添加多个同类标签</p></blockquote><p>加入含有 <code>class=&quot;site_uv&quot;</code>的html标签可显示站点访问人次。<br>加入含有 <code>class=&quot;site_pv&quot;</code>的html标签可显示站点访问量。</p><pre><code class="html">&lt;!-- 我这里是借用了code的样式，所以直接使用code标签。    自定义样式，可加入style属性设置--&gt;&lt;code class=&quot;site_uv&quot;&gt;&lt;/code&gt;&lt;code class=&quot;site_pv&quot;&gt;&lt;/code&gt;</code></pre><p><strong>上面代码的效果：</strong><br>访问人数：<code class="site_uv"></code>人，访问量：<code class="site_pv"></code>次。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 3-hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3-hexo支持mermaid图表</title>
      <link href="/2020/02/15/3-hexo-support-mermaid/"/>
      <url>/2020/02/15/3-hexo-support-mermaid/</url>
      
        <content type="html"><![CDATA[<p><img src="/2020/02/15/3-hexo-support-mermaid/image.jpg" alt="风铃"></p><blockquote><p>转自<a href="https://yelog.org/2019/11/12/3-hexo-support-mermaid/" target="_blank" rel="noopener">https://yelog.org/2019/11/12/3-hexo-support-mermaid/</a></p></blockquote><h2 id="一、说明"><a href="#一、说明" class="headerlink" title="一、说明"></a>一、说明</h2><h3 id="开启"><a href="#开启" class="headerlink" title="开启"></a>开启</h3><ol><li>安装hexo插件<pre><code class="bash">npm install hexo-filter-mermaid-diagrams</code></pre></li><li>修改<code>themes/3-hexo/_config.yml</code> 的 <code>mermaid.on</code>，开启主题支持<pre><code class="yml"># Mermaid 支持mermaid:on: truecdn: //cdn.jsdelivr.net/npm/mermaid@8.4.2/dist/mermaid.min.js#cdn: //cdnjs.cloudflare.com/ajax/libs/mermaid/8.3.1/mermaid.min.jsoptions: # 更多配置信息可以参考 https://mermaidjs.github.io/#/mermaidAPI theme: &#39;default&#39; startOnLoad: true flowchart:   useMaxWidth: false   htmlLabels: true</code></pre></li><li>在markdown中，像写代码块一样写图表<br><img src="//img.saodiyang.com/FuBTJvG5xIOIcKZPnO9UX5GCwthK.png" alt></li></ol><h2 id="二、示例"><a href="#二、示例" class="headerlink" title="二、示例"></a>二、示例</h2><p>以下示例源码可以在这边查看 <a href="https://github.com/yelog/blog/blob/master/source/_posts/tools/3-hexo%E6%94%AF%E6%8C%81mermaid%E5%9B%BE%E8%A1%A8.md" target="_blank" rel="noopener">本文源码</a><br>更多示例可以查看官网：<a href="https://mermaidjs.github.io" target="_blank" rel="noopener">https://mermaidjs.github.io</a></p><h3 id="1-flowchart"><a href="#1-flowchart" class="headerlink" title="1. flowchart"></a>1. flowchart</h3><pre><code class="mermaid">graph TD;    A--&gt;B;    A--&gt;C;    B--&gt;D;    C--&gt;D;</code></pre><pre><code class="mermaid">graph TB    c1--&gt;a2    subgraph one    a1--&gt;a2    end    subgraph two    b1--&gt;b2    end    subgraph three    c1--&gt;c2    end</code></pre><h3 id="2-Sequence-diagrams"><a href="#2-Sequence-diagrams" class="headerlink" title="2.Sequence diagrams"></a>2.Sequence diagrams</h3><pre><code class="mermaid">sequenceDiagram    participant Alice    participant Bob    Alice-&gt;&gt;John: Hello John, how are you?    loop Healthcheck        John-&gt;&gt;John: Fight against hypochondria    end    Note right of John: Rational thoughts &lt;br/&gt;prevail!    John--&gt;&gt;Alice: Great!    John-&gt;&gt;Bob: How about you?    Bob--&gt;&gt;John: Jolly good!</code></pre><h3 id="3-Class-diagrams"><a href="#3-Class-diagrams" class="headerlink" title="3.Class diagrams"></a>3.Class diagrams</h3><pre><code class="mermaid">classDiagram     Animal &lt;|-- Duck     Animal &lt;|-- Fish     Animal &lt;|-- Zebra     Animal : +int age     Animal : +String gender     Animal: +isMammal()     Animal: +mate()     class Duck{         +String beakColor         +swim()         +quack()     }     class Fish{         -int sizeInFeet         -canEat()     }     class Zebra{         +bool is_wild         +run()     }</code></pre><h3 id="4-State-diagrams"><a href="#4-State-diagrams" class="headerlink" title="4.State diagrams"></a>4.State diagrams</h3><pre><code class="mermaid">stateDiagram       [*] --&gt; Active       state Active {           [*] --&gt; NumLockOff           NumLockOff --&gt; NumLockOn : EvNumLockPressed           NumLockOn --&gt; NumLockOff : EvNumLockPressed           --           [*] --&gt; CapsLockOff           CapsLockOff --&gt; CapsLockOn : EvCapsLockPressed           CapsLockOn --&gt; CapsLockOff : EvCapsLockPressed           --           [*] --&gt; ScrollLockOff           ScrollLockOff --&gt; ScrollLockOn : EvCapsLockPressed           ScrollLockOn --&gt; ScrollLockOff : EvCapsLockPressed       }</code></pre><h3 id="5-Gantt-diagrams"><a href="#5-Gantt-diagrams" class="headerlink" title="5.Gantt diagrams"></a>5.Gantt diagrams</h3><pre><code class="mermaid">gantt       dateFormat  YYYY-MM-DD       title Adding GANTT diagram functionality to mermaid       section A section       Completed task            :done,    des1, 2014-01-06,2014-01-08       Active task               :active,  des2, 2014-01-09, 3d       Future task               :         des3, after des2, 5d       Future task2              :         des4, after des3, 5d       section Critical tasks       Completed task in the critical line :crit, done, 2014-01-06,24h       Implement parser and jison          :crit, done, after des1, 2d       Create tests for parser             :crit, active, 3d       Future task in critical line        :crit, 5d       Create tests for renderer           :2d       Add to mermaid                      :1d       section Documentation       Describe gantt syntax               :active, a1, after des1, 3d       Add gantt diagram to demo page      :after a1  , 20h       Add another diagram to demo page    :doc1, after a1  , 48h       section Last section       Describe gantt syntax               :after doc1, 3d       Add gantt diagram to demo page      :20h       Add another diagram to demo page    :48h</code></pre><h3 id="6-Pie-chart-diagrams"><a href="#6-Pie-chart-diagrams" class="headerlink" title="6.Pie chart diagrams"></a>6.Pie chart diagrams</h3><pre><code class="mermaid">pie    &quot;Dogs&quot; : 386    &quot;Cats&quot; : 85    &quot;Rats&quot; : 15</code></pre>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 3-hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3-hexo使用说明</title>
      <link href="/2020/02/14/3-hexo-instruction/"/>
      <url>/2020/02/14/3-hexo-instruction/</url>
      
        <content type="html"><![CDATA[<blockquote><p>转自：<a href="https://yelog.org/2017/03/23/3-hexo-instruction/" target="_blank" rel="noopener">https://yelog.org/2017/03/23/3-hexo-instruction/</a></p></blockquote><blockquote><p>下面如果没有特殊说明， <code>_config.yml</code> 都指主题配置文件，即 <code>3-hexo</code> 目录下</p></blockquote><h2 id="自定义首页"><a href="#自定义首页" class="headerlink" title="自定义首页"></a>自定义首页</h2><p>可查看这篇文章： <a href="/2020/02/16/3-hexo-homepage/" title="3-hexo配置首页">3-hexo配置首页</a></p><h2 id="blog快捷键"><a href="#blog快捷键" class="headerlink" title="blog快捷键"></a>blog快捷键</h2><p>可查看这篇文章： </p><h2 id="更换头像"><a href="#更换头像" class="headerlink" title="更换头像"></a>更换头像</h2><p>两种方式：</p><ol><li>替换 <code>source/img/avatar.jpg</code> 图片。</li><li>修改 <code>_config.yml</code> 中头像的配置记录</li></ol><pre><code class="xml"># 你的头像urlavatar: /img/avatar.jpgfavicon: /img/avatar.jpg</code></pre><h2 id="设置链接图标"><a href="#设置链接图标" class="headerlink" title="设置链接图标"></a>设置链接图标</h2><p>如下，如果没有连接，则不展示图标。</p><pre><code class="xml">#链接图标，链接为空则不显示link:  rss: /atom.xml  github: https://github.com/yelog  facebook: https://www.facebook.com/faker.tops  twitter:  linkedin:  instagram:  reddit: https://www.reddit.com/user/yelog/  weibo: http://weibo.com/u/2307534817  email: jaytp@qq.com</code></pre><h2 id="开启关于页面"><a href="#开启关于页面" class="headerlink" title="开启关于页面"></a>开启<code>关于</code>页面</h2><ol><li>在 <code>hexo</code> 根目录执行以下，创建 <code>关于</code> 页面<pre><code class="bash">hexo new page &quot;about&quot;</code></pre></li><li>位置： <code>source/aoubt/index.md</code> ，根据需要进行编辑。</li><li>在主题中开启显示：修改主题根目录 <code>_config.yml</code> 中的 <code>about</code> 的 <code>on</code> 为 <code>true</code>，如下所示<pre><code class="yml">menu:about:  # &#39;关于&#39; 按钮 on: true # 是否显示 url: /about  # 跳转链接 type: 1 # 跳转类型 1：站内异步跳转 2：当前页面跳转 3：打开新的tab页</code></pre></li></ol><h2 id="添加音乐插件"><a href="#添加音乐插件" class="headerlink" title="添加音乐插件"></a>添加音乐插件</h2><h2 id="配置评论系统"><a href="#配置评论系统" class="headerlink" title="配置评论系统"></a>配置评论系统</h2><p>目前添加了三种评论系统 <strong>disqus、多说、网易云跟帖、gitment、gitalk</strong></p><blockquote><p><code>日志：</code> 2017-03-21：多说将于2017-06-01正式关停服务</p></blockquote><h3 id="启用评论"><a href="#启用评论" class="headerlink" title="启用评论"></a>启用评论</h3><p>以 <code>disqus</code> 为例；</p><ol><li>关掉其他两个评论（设置on: false）</li><li>启用 <code>disqus</code> ,设置on: true</li><li>登陆 <code>disqus</code> 注册，得到shortname，填入shortname。</li><li>重启 <code>hexo</code>。</li></ol><h3 id="meta区显示评论数"><a href="#meta区显示评论数" class="headerlink" title="meta区显示评论数"></a>meta区显示评论数</h3><p>开启设置 <code>_config.yml</code></p><pre><code class="xml">comment_count: true# 文章标题下方显示评论数</code></pre><p><img src="http://img.saodiyang.com/FlDHXpVnJ-ECFCehRBoKkQMlqj_R.png" alt="开启效果"></p><h3 id="评论区预加载"><a href="#评论区预加载" class="headerlink" title="评论区预加载"></a>评论区预加载</h3><p>开启设置 <code>_config.yml</code></p><pre><code class="xml">preload_comment: false</code></pre><ol><li>false: 当点击评论条等区域时再加载评论模块</li><li>true: 页面加载时加载评论区</li></ol><p><img src="http://img.saodiyang.com/FrYn2xsPMLBizQZ_p_mCa-hJYTG_.png" alt="关闭效果"></p><h2 id="样式设置"><a href="#样式设置" class="headerlink" title="样式设置"></a>样式设置</h2><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>首先要关闭hexo根目录下<code>_config.yml</code>中的高亮设置：</p><pre><code class="xml">highlight:  enable: false</code></pre><p>配置主题下<code>_config.yml</code>中的高亮设置：<br>可以根据提示，配置喜欢的高亮主题</p><pre><code class="xml">highlight:  on: true # true开启代码高亮  lineNum: true # true显示行号  theme: darcula# 代码高亮主题,效果可以查看 https://highlightjs.org/static/demo/# 支持主题：# sublime : 参考sublime的高亮主题# darcula : 参考idea中的darcula的主题# atom-dark : 参考Atom的dark主题# atom-light : 参考Atom的light主题# github : 参考GitHub版的高亮主题# github-gist : GitHub-Gist主题# brown-paper : 牛皮纸效果# gruvbox-light : gruvbox的light主题# gruvbox-dark ： gruvbox的dark主题# rainbow :# railscasts :# sunburst :# kimbie-dark :# kimbie-light :# school-book : 纸张效果</code></pre><h3 id="MathJax数学公式"><a href="#MathJax数学公式" class="headerlink" title="MathJax数学公式"></a>MathJax数学公式</h3><p>修改 <code>_config.yml</code></p><pre><code class="xml"># MathJax 数学公式支持mathjax:  on: true #是否启用  per_page: false # 若只渲染单个页面，此选项设为false，页面内加入 mathjax: true</code></pre><p>考虑到页面的加载速度，支持渲染单个页面。<br>设置 <code>per_page: false</code> ,在需要渲染的页面内 加入 <code>mathjax: true</code></p><blockquote><p><strong><code>注意:</code></strong><br>由于hexo的MarkDown渲染器与MathJax有冲突，可能会造成矩阵等使用不正常。所以在使用之前需要修改两个地方<br>编辑 <code>node_modules\marked\lib\marked.js</code> 脚本</p></blockquote><ol><li>将451行 ，这一步取消了对 <code>\\,\{,\}</code> 的转义(escape)<pre><code class="js">escape: /^\\([\\`*{}\[\]()# +\-.!_&gt;])/,改为escape: /^\\([`*\[\]()# +\-.!_&gt;])/,</code></pre></li><li>将459行，这一步取消了对斜体标记 <code>_</code> 的转义<pre><code class="js">em: /^\b_((?:[^_]|__)+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,改为em:/^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</code></pre></li></ol><h3 id="表格样式"><a href="#表格样式" class="headerlink" title="表格样式"></a>表格样式</h3><p>目前提供了3中样式，修改 <code>_config.yml</code></p><pre><code class="xml">table: green_title# table 的样式# 为空时类似github的table样式# green 绿色样式# green_title 头部为青色的table样式</code></pre><h3 id="文章列表的hover样式"><a href="#文章列表的hover样式" class="headerlink" title="文章列表的hover样式"></a>文章列表的hover样式</h3><p>鼠标移入的背景色和文字颜色变动，设置 <code>_config.yml</code></p><pre><code class="xml">#文章列表 鼠标移上去的样式, 为空时使用默认效果article_list:  hover:    background: &#39;#e2e0e0&#39;  # 背景色:提供几种：&#39;#c1bfc1&#39;  &#39;#fbf4a8&#39;    color:     # 文字颜色 提供几种：&#39;#ffffff&#39;# 注意：由于颜色如果包含#，使用单引号 &#39; 引起来</code></pre><h2 id="开启字数统计"><a href="#开启字数统计" class="headerlink" title="开启字数统计"></a>开启字数统计</h2><ol><li>开启此功能需先安装插件，在 hexo根目录 执行 <code>npm i hexo-wordcount --save</code></li><li>修改 <code>_config.yml</code></li></ol><pre><code class="xml">word_count: true</code></pre><h2 id="多作者模式"><a href="#多作者模式" class="headerlink" title="多作者模式"></a>多作者模式</h2><p>可查看这篇文章： {% post_link 3-hexo-multiple-author %}</p><h2 id="文章排序及置顶"><a href="#文章排序及置顶" class="headerlink" title="文章排序及置顶"></a>文章排序及置顶</h2><p>可查看这篇文章： {% post_link hexo-top-sort  %}</p><h2 id="关于写文章"><a href="#关于写文章" class="headerlink" title="关于写文章"></a>关于写文章</h2><h3 id="如何写"><a href="#如何写" class="headerlink" title="如何写"></a>如何写</h3><p>每篇文章最好写上文集和标签，方便筛选和查看。<br>一般推荐一篇文章设置一个文集，一个或多个标签<br><code>categories</code>:文集，为左侧列表<br><code>tags</code>:标签，通过#来筛选<br>例如 本篇文章的设置</p><pre><code class="xml">---title: 3-hexo使用说明date: 2017-03-23 15:13:47categories:- 工具tags:- hexo- 3-hexo---</code></pre><h3 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h3><p>1.设置模板，blog根目录 <code>scaffolds/post.md</code><br>加入categories,tags等，这样以后通过 <code>hexo new</code> 生成的模板就不用写这两个单词了。<br>当然，你也可以写入任何你每个文章中都会有的部分。</p><pre><code class="xml">---title: {{ title }}date: {{ date }}categories:tags:---</code></pre><h2 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h2><h3 id="快捷命令"><a href="#快捷命令" class="headerlink" title="快捷命令"></a>快捷命令</h3><p>其实就通过alias，触发一些命令的集合<br>在 <code>~/.bashrc</code> 文件中添加</p><pre><code class="bash">alias hs=&#39;hexo clean &amp;&amp; hexo g &amp;&amp; hexo s&#39;  #启动本地服务alias hd=&#39;hexo clean &amp;&amp; hexo g &amp;&amp; hexo d&#39;  #部署博客</code></pre><p>甚至你也可以加入备份文章的命令，可以自由发挥。</p><h3 id="博客备份（快捷命令升级版）"><a href="#博客备份（快捷命令升级版）" class="headerlink" title="博客备份（快捷命令升级版）"></a>博客备份（快捷命令升级版）</h3><p>为了保证我们写的文章不丢失、快速迁移博客，都需要备份我们的blog。</p><ol><li>博客根目录，执行 <code>git init</code> 创建 git 仓库。</li><li>在 github（或其他托管平台、自建远程仓库等） 创建仓库并和本地仓库建立联系。</li><li>在 <code>~/.bashrc</code> 文件中添加<pre><code class="bash">alias hs=&#39;hexo clean &amp;&amp; hexo g &amp;&amp; hexo s&#39;alias hd=&#39;hexo clean &amp;&amp; hexo g &amp;&amp; hexo d &amp;&amp; git add . &amp;&amp; git commit -m &quot;update&quot; &amp;&amp; git push -f&#39;</code></pre></li></ol><p>这样，我们在执行 <code>hd</code> 进行部署时，就一同将博客进行备份了</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 3-hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/02/14/hello-world/"/>
      <url>/2020/02/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
